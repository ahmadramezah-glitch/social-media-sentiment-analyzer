name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run linting
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run tests
      run: |
        python -c "import app; print('App imports successfully')"
        python -c "import sentiment; print('Sentiment module imports successfully')"
        python -c "import twitter_api; print('Twitter API module imports successfully')"
    
    - name: Check file structure
      run: |
        echo "Checking project structure..."
        ls -la
        echo "Checking templates directory..."
        ls -la templates/
        echo "Checking Python files..."
        find . -name "*.py" -type f

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Run security checks
      run: |
        bandit -r . -f json -o bandit-report.json || true
        safety check --json --output safety-report.json || true
    
    - name: Check for secrets
      run: |
        echo "Checking for potential secrets in code..."
        if grep -r "password\|secret\|token\|key" . --include="*.py" --include="*.md" | grep -v "example\|demo\|config.example"; then
          echo "Potential secrets found in code!"
          exit 1
        fi

  build:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Build application
      run: |
        echo "Building application..."
        python -c "import app; print('Build successful')"
    
    - name: Create release artifact
      run: |
        mkdir -p dist
        tar -czf dist/social-media-sentiment-analyzer.tar.gz --exclude='.git' --exclude='.venv' --exclude='__pycache__' --exclude='instance' .
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: social-media-sentiment-analyzer
        path: dist/

  deploy-staging:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: staging
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        # Add your staging deployment commands here
        # Example: heroku container:push web -a your-staging-app

  deploy-production:
    needs: [deploy-staging]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        # Add your production deployment commands here
        # Example: heroku container:push web -a your-production-app
